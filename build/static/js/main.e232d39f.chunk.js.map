{"version":3,"sources":["Store/actionTypes.js","Store/reducers/getAll.js","Store/reducers/rootReducer.js","Store/reducers/putOne.js","Store/store.js","Containers/NavBar.js","Services/apiCalls.js","Store/actions/doGetAll.js","Store/actions/doPutOne.js","Components/Card.js","Containers/hocs/SideBar.js","Containers/Main.js","Components/Inputs.js","Containers/Form.js","Containers/App.js","Containers/hocs/PageDimmer.js","serviceWorker.js","index.js"],"names":["PUT_ONE","initialState","rootReducer","combineReducers","cards","state","action","type","newState","payload","putOne","console","log","newCharacter","newCards","unshift","additions","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","reducer","NavBar","props","activeItem","handleItemClick","e","name","setState","this","Menu","inverted","stackable","Item","active","onClick","position","Button","animated","handleShow","Content","visible","hidden","Icon","Search","category","fluid","Component","BASE_URL","postOne","inputs","a","axios","method","url","data","catch","response","status","message","code","character_id","doGetAll","dispatch","getState","get","then","doPutOne","cid","id","error","randomColour","Math","floor","random","Card","shows","abilities","img","Array","isArray","split","listAbilities","counter","ability","listAbility","key","className","push","style","backgroundImage","data-text","VerticalSidebar","animation","direction","hideBar","deviceWidth","innerWidth","width","Sidebar","as","icon","vertical","size","onHide","SidebarExampleSidebar","WrappedComponent","handleClick","bind","prevState","Pushable","Segment","overflow","Pusher","dimmed","Main","grid","n","i","column","Grid","Column","floated","produceGrid","length","columns","celled","map","g","SideBar","connect","bindActionCreators","actions","Inputs","Form","onSubmit","handleSubmit","Group","widths","Input","required","label","placeholder","value","onChange","handleChange","Popup","trigger","loading","color","BuiltForm","handleDismiss","err","m","Promise","resolve","setTimeout","hideForm","piled","Message","onDismiss","Header","ConnectedBuiltForm","handleHide","Dimmer","Dimmable","onClickOutside","verticalAlign","React","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e232d39f.chunk.js","sourcesContent":["export const GET_ALL = 'GET ALL';\r\nexport const PUT_ONE = 'PUT ONE CHARACTER';\r\n\r\nexport const ERR = 'AN ERROR OCCURRED';","import { GET_ALL } from '../actionTypes';\r\n\r\nconst initialState = []; // acts as placeholder\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ALL:\r\n            const newState = action.payload;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport getAll from './getAll';\r\nimport putOne from './putOne';\r\n\r\nconst rootReducer = combineReducers({ cards: getAll, putOne }); // getAll is the name of the reducer and we are changing it's name to num\r\n\r\nexport default rootReducer;","import { PUT_ONE } from '../actionTypes';\r\n\r\nconst initialState = '';\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case PUT_ONE:\r\n            console.log('AT PUT ONE, we have the intial state as ', state, '\\n and the action as ', action);\r\n            const { cards, newCharacter } = action.payload;\r\n            const newCards = cards.unshift(newCharacter);\r\n            return { cards: newCards };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './reducers/rootReducer';\r\n\r\nconst additions = compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst defaultState = {  };\r\n\r\nconst store = createStore(reducer, defaultState, additions);\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { Input, Menu, Search, Button, Icon } from 'semantic-ui-react'\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = { activeItem: 'home' }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n    render() {\r\n        const { activeItem } = this.state\r\n        return (\r\n            <Menu inverted stackable>\r\n                <Menu.Item\r\n                    name='home'\r\n                    active={activeItem === 'home'}\r\n                    onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                    name='messages'\r\n                    active={activeItem === 'messages'}\r\n                    onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                    name='friends'\r\n                    active={activeItem === 'friends'}\r\n                    onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Menu position='right'>\r\n                    <Menu.Item>\r\n                        <Button animated='fade' inverted onClick={this.props.handleShow}>\r\n                            <Button.Content visible>Create New</Button.Content>\r\n                            <Button.Content hidden ><Icon name='plus' /></Button.Content>\r\n                        </Button>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Search category fluid />\r\n                    </Menu.Item>\r\n                </Menu.Menu>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import axios from 'axios';\r\n\r\nconst BASE_URL = \"https://cardbuilderv1.herokuapp.com/\";\r\n\r\nexport function getAll() {\r\n    return axios.get(BASE_URL);\r\n}\r\n\r\nexport async function postOne(inputs) {\r\n    let err = null;\r\n    const response = await axios({\r\n        method: 'POST',\r\n        url: BASE_URL + 'characters',\r\n        data: inputs\r\n    }).catch(e => err = e);\r\n\r\n    const data = response.data;\r\n    if (!response)\r\n        return { status: 0, message: \"Please check your network connectivity!\" };\r\n    else if ('code' in data && data.code === '23505')\r\n        return { status: 0, message: \"Buddy, that Character already exists!\" };\r\n    else if ('code' in data)\r\n        return { status: 0, message: \"Oops! Something went wrong while submitting your Character. Error Code : \"+data.code };\r\n\r\n    const character_id = data.character_id;\r\n    return { status: 1, character_id, message: \"Your character was saved!\" };\r\n}\r\n\r\nexport function getOne(id) {\r\n    console.log(id, 'is the value of id');\r\n    return axios.get(BASE_URL + id);\r\n}\r\n","import { getAll } from '../../Services/apiCalls';\r\nimport { GET_ALL } from '../actionTypes';\r\n\r\nexport default function doGetAll() {\r\n    return (dispatch, getState) => { // we are returning a function\r\n        console.log('we have getState as', getState()); // notice getState is a function\r\n        //let num = 50 + getState().num; // be careful of the name of the variables inside the state \r\n        getAll()\r\n            .then(response => response.data)\r\n            .then(data => dispatch({ type: GET_ALL, payload: data }))\r\n            .catch(e => console.log(e));\r\n    }\r\n}","import { PUT_ONE } from '../actionTypes';\r\n\r\nimport { getOne } from '../../Services/apiCalls';\r\n\r\nexport default function doPutOne(cid) {\r\n    return async (dispatch, getState) => {\r\n        getOne(cid)\r\n            .then(response => response.data)\r\n            .then(data => dispatch({ type: PUT_ONE, payload: { cards: getState().cards, newCharacter: data[0] } }))\r\n            .catch(error => console.log(error, 'while retreiving that card'));\r\n    }\r\n}","import React from 'react';\r\n\r\nimport \"./Card.css\";\r\n\r\n\r\nfunction randomColour() {\r\n    const colours = ['red', 'green', 'blue'];\r\n    const randIndex = Math.floor(Math.random() * 3);\r\n    return colours[randIndex];\r\n}\r\n\r\nfunction Card(props) {\r\n    let { name, shows, abilities, img, id } = props;\r\n    abilities = Array.isArray(abilities) ? abilities : abilities.split(',');\r\n    let listAbilities = [], counter = 0;\r\n    for (const ability of abilities) {\r\n        const listAbility =\r\n            <label key={counter++} className={\"class-badge badge-\" + randomColour()}>{ability}</label>\r\n        listAbilities.push(listAbility);\r\n    }\r\n    return (\r\n        <div className={\"character-card-v2 card-\" + randomColour()}>\r\n            <div className=\"portrait\" style={{ backgroundImage: 'url(' + img + ')' }}>\r\n            </div>\r\n            <div className=\"details\">\r\n                <div className=\"names\">\r\n                    <div className=\"glitch-wrapper\">\r\n                        <div className=\"glitch\" data-text={name}>{name}\r\n                        </div>\r\n                    </div>\r\n                    <small>{shows}</small>\r\n                </div>\r\n                <div className=\"classes\">\r\n                    {listAbilities}\r\n                </div>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport {\r\n    Icon,\r\n    Menu,\r\n    Segment,\r\n    Sidebar,\r\n} from 'semantic-ui-react';\r\n\r\nconst VerticalSidebar = ({ animation, direction, visible, hideBar }) => {\r\n    var deviceWidth =  window.innerWidth;\r\n    let width = 'very wide';\r\n    if (deviceWidth < 400) width = 'thin';\r\n    else if (deviceWidth >= 400 && deviceWidth < 600) width = 'wide';\r\n    else width = 'very wide';\r\n    return <Sidebar\r\n        as={Menu}\r\n        animation={animation}\r\n        direction={direction}\r\n        icon='labeled'\r\n        inverted\r\n        vertical\r\n        visible={visible}\r\n        size='massive'\r\n        width={width}\r\n        onHide={hideBar}\r\n    >\r\n        <Menu.Item as='a'>\r\n            <Icon name='home' />\r\n          Home\r\n        </Menu.Item>\r\n        <Menu.Item as='a'>\r\n            <Icon name='gamepad' />\r\n          Games\r\n        </Menu.Item>\r\n        <Menu.Item as='a'>\r\n            <Icon name='camera' />\r\n          Channels\r\n        </Menu.Item>\r\n    </Sidebar>\r\n}\r\n\r\nconst SidebarExampleSidebar = (WrappedComponent) => {\r\n    class Hoc extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                visible: false,\r\n            }\r\n            this.handleClick = this.handleClick.bind(this);\r\n            this.hideBar = this.hideBar.bind(this);\r\n        }\r\n\r\n        handleClick(e) {\r\n            this.setState(function (prevState, props) {\r\n                return {\r\n                    visible: !prevState.visible,\r\n                };\r\n            })\r\n        }\r\n\r\n        hideBar() {\r\n            this.setState(function (prevState, props) {\r\n                return { visible: false };\r\n            })\r\n        }\r\n\r\n        render() {\r\n            const animation = 'slide along';\r\n            const direction = 'right';\r\n            const dimmed = true;\r\n            return (\r\n                <div>\r\n                    <Sidebar.Pushable as={Segment} style={{ overflow: 'hidden' }}>\r\n                        <VerticalSidebar\r\n                            animation={animation}\r\n                            direction={direction}\r\n                            visible={this.state.visible}\r\n                            hideBar={this.hideBar}\r\n                        />\r\n                        <Sidebar.Pusher dimmed={dimmed && this.state.visible}>\r\n                            <WrappedComponent handleClick={this.handleClick} {...this.props} />\r\n                        </Sidebar.Pusher>\r\n                    </Sidebar.Pushable>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return Hoc;\r\n}\r\n\r\nexport default SidebarExampleSidebar;","import React, { Component } from 'react'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Grid, Button } from 'semantic-ui-react';\r\nimport './stylesheets/Main.css';\r\n\r\nimport * as actions from '../Store/actions/actionCreators';\r\n\r\nimport BuiltCard from '../Components/Card';\r\nimport SideBar from './hocs/SideBar';\r\n\r\n\r\n// helper functions\r\nfunction mapStateToProps(state) {\r\n    return { ...state };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(actions, dispatch);\r\n}\r\n\r\nfunction produceGrid(n, handleClick, cards) {\r\n    let grid = [];\r\n    for (let i = 0; i < n; i++) {\r\n        let column =\r\n            <Grid.Column floated='left' key={cards[i].id} onClick={handleClick} >\r\n                <BuiltCard {...cards[i]} key={cards[i].id} />\r\n            </Grid.Column>;\r\n        grid.push(column);\r\n    }\r\n    return grid;\r\n}\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    componentWillMount() {\r\n        this.props.doGetAll();\r\n    }\r\n\r\n    render() {\r\n        const { handleClick, cards } = this.props;\r\n        let grid = produceGrid(cards.length, handleClick, cards);\r\n        return (\r\n            <div className='main container'>\r\n                \r\n                <Grid stackable columns={3} celled='internally'>\r\n                    {grid.map(g => g)}\r\n                </Grid>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst ConnectedMain = connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\n// the SideBar higher order component will pass the props to the Main Component\r\nexport default SideBar(ConnectedMain);","import React, { Component } from 'react';\r\nimport { Form, Button, Popup, Loader } from 'semantic-ui-react';\r\n\r\nclass Inputs extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Form size='big' onSubmit={this.props.handleSubmit}>\r\n\t\t\t\t<Form.Group widths='equal'>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tlabel='The Name of your Awesome Character'\r\n\t\t\t\t\t\tplaceholder='The Flash'\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\tvalue={this.props.name}\r\n\t\t\t\t\t\tonChange={this.props.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group widths='equal'>\r\n\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tlabel='Where did you find your character?'\r\n\t\t\t\t\t\tplaceholder='The Justice League'\r\n\t\t\t\t\t\tname='shows'\r\n\t\t\t\t\t\tvalue={this.props.shows}\r\n\t\t\t\t\t\tonChange={this.props.handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group widths='equal'>\r\n\t\t\t\t\t<Popup inverted trigger={\r\n\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tlabel='What all stuff your character can do?'\r\n\t\t\t\t\t\t\tplaceholder='Runs fast, Lightning'\r\n\t\t\t\t\t\t\tname='abilities'\r\n\t\t\t\t\t\t\tvalue={this.props.abilities}\r\n\t\t\t\t\t\t\tonChange={this.props.handleChange}\r\n\t\t\t\t\t\t/>}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Popup.Content>\r\n\t\t\t\t\t\t\tPlease enter comma separated values\r\n\t\t\t\t\t\t</Popup.Content>\r\n\t\t\t\t\t</Popup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group widths='equal'>\r\n\t\t\t\t\t<Popup inverted trigger={\r\n\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tlabel='Paste in an image of your character'\r\n\t\t\t\t\t\t\tplaceholder='https://img1.looper.com/img/gallery/easter-eggs-in-the-flash-only-real-fans-noticed/intro-1576603048.jpg'\r\n\t\t\t\t\t\t\tname='img'\r\n\t\t\t\t\t\t\tvalue={this.props.img}\r\n\t\t\t\t\t\t\tonChange={this.props.handleChange}\r\n\t\t\t\t\t\t/>}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Popup.Content>\r\n\t\t\t\t\t\t\tPlease make sure it is a valid URL!\r\n\t\t\t\t\t\t</Popup.Content>\r\n\t\t\t\t\t</Popup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button loading={this.props.loading}\r\n\t\t\t\t\tcolor='green' inverted\r\n\t\t\t\t\ttype='submit'>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default Inputs;","import React, { Component } from 'react';\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../Store/actions/actionCreators';\r\n\r\nimport { Segment, Grid, Message, Icon } from 'semantic-ui-react';\r\nimport Card from '../Components/Card';\r\nimport Inputs from '../Components/Inputs';\r\n\r\nimport { postOne } from '../Services/apiCalls';\r\n\r\n\r\n// functions for store subscriptions\r\nfunction mapStateToProps(state) {\r\n    return { ...state };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(actions, dispatch);\r\n}\r\n\r\n\r\n\r\nclass BuiltForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleDismiss = this.handleDismiss.bind(this);\r\n\r\n        const { status } = this.props;\r\n        if (status === 'edit') {\r\n            this.state = { ...this.props, err: '' };\r\n            delete this.state[status];\r\n        } else {\r\n            // status is new \r\n            this.state = {\r\n                name: '',\r\n                shows: '',\r\n                img: '',\r\n                abilities: '',\r\n                err: '',\r\n                loading: false\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange(e, { name, value }) {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async handleSubmit() {\r\n        console.log('submitting data now', this.state);\r\n        this.setState({ loading: true });\r\n        let inputs = { ...this.state };\r\n        delete inputs['err']; // remove the unnecessary fields\r\n        delete inputs['loading'];\r\n\r\n        const m = await postOne(inputs);\r\n\r\n        if (m.status === 0) this.setState({ loading: false, err: m.message });\r\n        if (m.status === 1) {\r\n            await new Promise(resolve => setTimeout(resolve, 1500)); // needs at least 1 second to get the character\r\n            this.props.doPutOne(m.character_id);\r\n            this.props.hideForm();\r\n            this.setState({\r\n                name: '', shows: '', img: '', abilities: '', err: '', loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDismiss() {\r\n        this.setState({ err: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Segment piled >\r\n                {(this.state.err && this.state.err.length > 0 ?\r\n                    <Message icon error onDismiss={this.handleDismiss} >\r\n                        <Icon name='times circle' />\r\n                        <Message.Header floated>\r\n                            {this.state.err}\r\n                        </Message.Header>\r\n                    </Message> : null)}\r\n                <Grid columns={3} stackable celled='internally'>\r\n                    <Grid.Column floated='left'>\r\n                        <Card {...this.state} />\r\n                    </Grid.Column>\r\n                    <Grid.Column floated='right'>\r\n                         <Inputs handleChange={this.handleChange} handleSubmit={this.handleSubmit} {...this.state} />\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        );\r\n    }\r\n}\r\n\r\nconst ConnectedBuiltForm = connect(mapStateToProps, mapDispatchToProps)(BuiltForm);\r\n\r\nexport default ConnectedBuiltForm;","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport NavBar from './NavBar';\nimport Main from './Main';\nimport Form from './hocs/PageDimmer';\n\nimport store from '../Store/store';\n\n\nfunction App(props) {\n    //store.dispatch({ type: 'GET ALL', payload: 200 });\n    return (\n        <div >\n            <NavBar {...props} />\n            <Main />\n        </div>\n    );\n}\n\nexport default Form(App);","import React from 'react';\r\nimport { Dimmer } from 'semantic-ui-react';\r\n\r\nimport \"./PageDimmer.css\";\r\n\r\nimport BuiltForm from '../Form';\r\n\r\nconst PageDimmer = WrappedComponent => {\r\n    class Hoc extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { active: false };\r\n            this.handleShow = this.handleShow.bind(this);\r\n            this.handleHide = this.handleHide.bind(this);\r\n        }\r\n\r\n        handleShow = () => this.setState({ active: true })\r\n        handleHide = () => this.setState({ active: false })\r\n\r\n        render() {\r\n            const { active } = this.state;\r\n            return (\r\n                <Dimmer.Dimmable dimmed={active}>\r\n                    <WrappedComponent handleHide={this.handleHide} handleShow={this.handleShow} />\r\n\r\n                    <Dimmer\r\n                        active={active}\r\n                        onClickOutside={this.handleHide}\r\n                        verticalAlign='top'\r\n                    >\r\n                        <div className='builtform container'>\r\n                            <BuiltForm hideForm={this.handleHide} />\r\n                        </div>\r\n                    </Dimmer>\r\n\r\n                </Dimmer.Dimmable>\r\n            );\r\n        }\r\n    }\r\n    return Hoc;\r\n}\r\n\r\nexport default PageDimmer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './Store/store';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}