{"version":3,"sources":["Components/NavBar.js","Components/Card.js","Components/hocs/SideBar.js","Components/Main.js","Components/hocs/Form.js","Components/App.js","serviceWorker.js","index.js"],"names":["NavBar","props","state","activeItem","handleItemClick","e","name","setState","this","Menu","inverted","stackable","Item","active","onClick","position","Button","animated","handleShow","Content","visible","hidden","Icon","Search","category","fluid","Component","extra","CardExampleCardProps","Card","image","link","header","meta","description","raised","VerticalSidebar","animation","direction","hideBar","deviceWidth","window","innerWidth","width","Sidebar","as","icon","vertical","size","onHide","SideBar","WrappedComponent","handleClick","bind","prevState","Pushable","Segment","style","overflow","Pusher","dimmed","grid","n","i","column","Grid","Column","key","push","produceGrid","columns","centered","map","g","showForm","Form","widths","Group","Input","label","placeholder","content","handleHide","Dimmer","Dimmable","onClickOutside","verticalAlign","className","React","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aade622c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Input, Menu, Search, Button, Icon } from 'semantic-ui-react'\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = { activeItem: 'home' }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n    render() {\r\n        const { activeItem } = this.state\r\n        return (\r\n            <Menu inverted stackable>\r\n                <Menu.Item\r\n                    name='home'\r\n                    active={activeItem === 'home'}\r\n                    onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                    name='messages'\r\n                    active={activeItem === 'messages'}\r\n                    onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Item\r\n                    name='friends'\r\n                    active={activeItem === 'friends'}\r\n                    onClick={this.handleItemClick}\r\n                />\r\n                <Menu.Menu position='right'>\r\n                    <Menu.Item>\r\n                        <Button animated='fade' inverted onClick={this.props.handleShow}>\r\n                            <Button.Content visible>Create New</Button.Content>\r\n                            <Button.Content hidden ><Icon name='plus' /></Button.Content>\r\n                        </Button>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Search category fluid />\r\n                    </Menu.Item>\r\n                </Menu.Menu>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react'\r\nimport { Card, Icon } from 'semantic-ui-react';\r\n\r\nimport Simple from './hocs/Simple';\r\n\r\n\r\nconst extra = (\r\n    <a>\r\n        <Icon name='user' />\r\n    16 Friends\r\n    </a>\r\n)\r\n\r\nconst CardExampleCardProps = () => (\r\n    <Card\r\n        image='https://vignette.wikia.nocookie.net/characterprofile/images/a/a6/Broly_artwork.png/revision/latest/scale-to-width-down/340?cb=20190515183751'\r\n        link\r\n        header='Elliot Baker'\r\n        meta='Friend'\r\n        description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\r\n        extra={extra}\r\n        raised fluid\r\n    />\r\n\r\n)\r\n\r\nexport default CardExampleCardProps;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Icon,\r\n    Menu,\r\n    Segment,\r\n    Sidebar,\r\n} from 'semantic-ui-react';\r\n\r\nconst VerticalSidebar = ({ animation, direction, visible, hideBar }) => {\r\n    var deviceWidth =  window.innerWidth;\r\n    let width = 'very wide';\r\n    if (deviceWidth < 400) width = 'thin';\r\n    else if (deviceWidth >= 400 && deviceWidth < 600) width = 'wide';\r\n    else width = 'very wide';\r\n    return <Sidebar\r\n        as={Menu}\r\n        animation={animation}\r\n        direction={direction}\r\n        icon='labeled'\r\n        inverted\r\n        vertical\r\n        visible={visible}\r\n        size='massive'\r\n        width={width}\r\n        onHide={hideBar}\r\n    >\r\n        <Menu.Item as='a'>\r\n            <Icon name='home' />\r\n          Home\r\n        </Menu.Item>\r\n        <Menu.Item as='a'>\r\n            <Icon name='gamepad' />\r\n          Games\r\n        </Menu.Item>\r\n        <Menu.Item as='a'>\r\n            <Icon name='camera' />\r\n          Channels\r\n        </Menu.Item>\r\n    </Sidebar>\r\n}\r\n\r\nconst SidebarExampleSidebar = (WrappedComponent) => {\r\n    class Hoc extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                visible: false,\r\n            }\r\n            this.handleClick = this.handleClick.bind(this);\r\n            this.hideBar = this.hideBar.bind(this);\r\n        }\r\n\r\n        handleClick(e) {\r\n            this.setState(function (prevState, props) {\r\n                return {\r\n                    visible: !prevState.visible,\r\n                };\r\n            })\r\n        }\r\n\r\n        hideBar() {\r\n            this.setState(function (prevState, props) {\r\n                return { visible: false };\r\n            })\r\n        }\r\n\r\n        render() {\r\n            const animation = 'slide along';\r\n            const direction = 'right';\r\n            const dimmed = true;\r\n            return (\r\n                <div>\r\n                    <Sidebar.Pushable as={Segment} style={{ overflow: 'hidden' }}>\r\n                        <VerticalSidebar\r\n                            animation={animation}\r\n                            direction={direction}\r\n                            visible={this.state.visible}\r\n                            hideBar={this.hideBar}\r\n                        />\r\n                        <Sidebar.Pusher dimmed={dimmed && this.state.visible}>\r\n                            <WrappedComponent handleClick={this.handleClick} />\r\n                        </Sidebar.Pusher>\r\n                    </Sidebar.Pushable>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return Hoc;\r\n}\r\n\r\nexport default SidebarExampleSidebar;","import React from 'react'\r\nimport { Grid, Reveal, Image, GridColumn } from 'semantic-ui-react';\r\n\r\nimport Card from './Card';\r\nimport SideBar from './hocs/SideBar';\r\n\r\n\r\n// helper functions\r\nfunction produceGrid(n, handleClick) {\r\n    const m = 3;\r\n    let grid = [];\r\n    for (let i = 0; i < n; i++) {\r\n        let column =\r\n            <Grid.Column key={i} onClick={handleClick} >\r\n                <Card />\r\n            </Grid.Column>;\r\n        grid.push(column);\r\n    }\r\n    return grid;\r\n}\r\n\r\nconst Main = (props) => {\r\n    const handleClick = props.handleClick;\r\n    let grid = produceGrid(6, handleClick);\r\n    return (\r\n        <div>\r\n        <Grid stackable columns={3} centered>\r\n            {grid.map(g => g)}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n// the SideBar higher order component will pass the props to the Main Component\r\nexport default SideBar(Main);","import React from 'react';\r\nimport { Dimmer, Form } from 'semantic-ui-react';\r\nimport './stylesheets/Form.css';\r\n\r\nconst showForm =\r\n    <Form size='huge' widths={35}>\r\n        <Form.Group widths={12}>\r\n            <Form.Input\r\n                label='Name'\r\n                placeholder='Your Character'\r\n                name='name'\r\n            //value={name}\r\n            //onChange={handleChange}\r\n            />\r\n        </Form.Group>\r\n        <Form.Group widths={12}>\r\n            <Form.Input\r\n                label='Abilities'\r\n                placeholder='The awesome abilities of your character ...'\r\n                name='abilities'\r\n            />\r\n        </Form.Group>\r\n        <Form.Group widths={12}>\r\n            <Form.Button content='Submit' fluid />\r\n        </Form.Group>\r\n    </Form>;\r\n\r\n\r\nconst NewForm = WrappedComponent => {\r\n    class Hoc extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { active: true };\r\n            this.handleShow = this.handleShow.bind(this);\r\n            this.handleHide = this.handleHide.bind(this);\r\n        }\r\n\r\n        handleShow = () => this.setState({ active: true })\r\n        handleHide = () => this.setState({ active: false })\r\n\r\n        render() {\r\n            const { active } = this.state;\r\n            return (\r\n                <Dimmer.Dimmable dimmed={active}>\r\n                    <WrappedComponent handleHide={this.handleHide} handleShow={this.handleShow} />\r\n\r\n                    <Dimmer\r\n                        active={active}\r\n                        onClickOutside={this.handleHide}\r\n                        verticalAlign='top'\r\n                    >\r\n                        <div className='align-middle'>\r\n                            {showForm}\r\n                        </div>\r\n                    </Dimmer>\r\n\r\n                </Dimmer.Dimmable>\r\n            );\r\n        }\r\n    }\r\n    return Hoc;\r\n}\r\n\r\nexport default NewForm;","import React from 'react';\n\n//import { Provider } from 'react-redux';\n//import store from './Store/store';\n\nimport NavBar from './NavBar';\nimport Main from './Main';\nimport Form from './hocs/Form';\n\n// DO NOT USE THE STORE HERE\n// USE ANOTHER FILE - StoreConnector.js\n\nfunction App(props) {\n    return (\n        //<Provider store={store}>\n            //<div>\n            <div >\n            <NavBar {...props}/>\n                <Main />\n\n            </div>\n\n        //</Provider>\n        );\n}\n\nexport default Form(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}